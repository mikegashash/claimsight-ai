services:
  api:
    image: claimsight-ai-api:latest
    build:
      context: .                         # build from repo root
      dockerfile: claimsight_ai/api/Dockerfile
    command: ["uvicorn", "claimsight_ai.api.main:app", "--host", "0.0.0.0", "--port", "8000", "--log-level", "info"]
    ports:
      - "8000:8000"
    volumes:
      - .:/workspace
    working_dir: /workspace
    env_file: .env                       # optional, if you keep SNOWFLAKE creds here
    environment:
      # fallbacks so compose doesn’t spam warnings if vars aren’t set
      SNOWFLAKE_USER:       "${SNOWFLAKE_USER:-}"
      SNOWFLAKE_PASSWORD:   "${SNOWFLAKE_PASSWORD:-}"
      SNOWFLAKE_ACCOUNT:    "${SNOWFLAKE_ACCOUNT:-}"
      SNOWFLAKE_WAREHOUSE:  "${SNOWFLAKE_WAREHOUSE:-}"
      SNOWFLAKE_DATABASE:   "${SNOWFLAKE_DATABASE:-}"
      SNOWFLAKE_SCHEMA:     "${SNOWFLAKE_SCHEMA:-}"
      SNOWFLAKE_ROLE:       "${SNOWFLAKE_ROLE:-}"

  ui:
    build:
      context: .
      dockerfile: ui/Dockerfile          # keep as-is if your UI Dockerfile is here
    image: claimsight-ai-ui:latest
    ports:
      - "8501:8501"
    volumes:
      - .:/workspace
    working_dir: /workspace
    environment:
      API_URL: "http://api:8000"
    depends_on:
      - api

  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: claims
      POSTGRES_PASSWORD: claims
      POSTGRES_DB: claimsdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  chroma:
    image: chromadb/chroma
    ports:
      - "8001:8001"
    volumes:
      - chroma_data:/chroma/chroma

volumes:
  postgres_data:
  chroma_data:
